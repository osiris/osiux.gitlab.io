# generar *ChangeLog* en `org-mode` usando `git log`

* AUTHOR: Osiris Alejandro Gomez
* EMAIL: osiux@osiux.com
* DATE: 2021-02-01 18:36

## porqué registrar los cambios?

Estoy en otro intento por darle algo de continuidad a mi desantentido *blog* y para cambiar un poco la estrategia, ahora estoy comenzando a escribir los *posts* y publicarlos asi como estén, llenos de errores e inconclusos, la idea es ir mejorándolos poco a poco, y por esto es una buena práctica ir registrando los cambios en un *ChangeLog* para ver el progreso, cómo mejoró y se fue corrigiendo.

## registrar los cambios manualmente es tedioso!

Algunos pocos posts, tenían un *ChangeLog* manual y la verdad es que es una tarea tediosa y propensa a errores, pero se puede automatizar, ahora bien lo que más me interesaba era que cada entrada del *ChangeLog* apunte al *commit* del cambio a los efectos de visualizar fácilmente el `diff`, pero esto conlleva un problema, el *hash* del *commit* del cambio debe estar dentro del cambio y no es posible, a menos que en el *subject* del *commit* escriba el mensaje pensando que va a ser una línea del *ChangeLog*, y respetando el *commit* atómico a un único *post* debería luego poder realizar un *commit* con todos los *commits* que conforman el *ChangeLog*.

## `git log` al rescate!

La ventaja de esta idea es que puedo crear un *script* `bash` que reciba como parámetro el nombre de archivo del *post* e invoque a `git log` para obtener el historial de cambios y construya el *ChangeLog* y lo inserte dentro del mismo archivo del *post*, de esta manera podría generar *ChangeLog* para cada archivo del *blog* a futuro y del pasado.

## `git-log-org-changelog`

El *script* inicial es bastante simple y por ahora asume que el título `** ChangeLog` es la última sección de un archivo, lo busca, lo trunca, genera el historial de cambios y lo concatena, obviamente en caso de no existir, simplemente lo añade.

Para evitar incluir cambios recursivamente innecesarios, los *commits* específicos de *ChangeLog* iran con el *subject* `ChangeLog: filename.gmi`

## automatizando el *ChangeLog*

De momento el script `git-log-org-changelog`[1] esta a prueba, viendo que casos de usos se presentan para mejoararlo, pero muy posiblemente lo voy a invocar desde del *hook* `post-commit` para automatizar por completo su generación totalmente desatendida.

## ChangeLog

* `2021-02-04 19:50`[2] corrijo link a script `git-log-org-changelog`
* `2021-02-01 19:33`[3] agrego generar *ChangeLog* en `org-mode` usando `git log`


=> https://gitlab.com/osiux/git-bash-utils/-/raw/master/git-log-org-changelog 1: https://gitlab.com/osiux/git-bash-utils/-/raw/master/git-log-org-changelog
=> https://gitlab.com/osiux/osiux.gitlab.io/-/commit/1a143d693a8007793e04914f4e61a7abd3a7e083 2: https://gitlab.com/osiux/osiux.gitlab.io/-/commit/1a143d693a8007793e04914f4e61a7abd3a7e083
=> https://gitlab.com/osiux/osiux.gitlab.io/-/commit/f99f1b8e4f3c561aad89598d5773b095cd342835 3: https://gitlab.com/osiux/osiux.gitlab.io/-/commit/f99f1b8e4f3c561aad89598d5773b095cd342835