#+TITLE:       Dibujar logo /Ansible Tools/ en /3D/ usando /OpenSCAD/ y /Blender/
#+DESCRIPTION: Tutorial cómo dibujar el logo de Ansible Tools en 3D
#+AUTHOR:      Osiris Alejandro Gomez
#+EMAIL:       osiux@osiux.com
#+LANGUAGE:    es
#+LINK_HOME:   index.html
#+INCLUDE:     header.org
#+KEYWORDS:    Blog, Ansible, 3D, AnsibleTools, Blender, Design, OpenSCAD, Tutorial
#+DATE:        2023-03-28 09:57
#+HTML_HEAD:   <meta property="og:title" content="Dibujar logo /Ansible Tools/ en /3D/ usando /OpenSCAD/ y /Blender/" />
#+HTML_HEAD:   <meta property="og:description" content="Tutorial cómo dibujar el logo de Ansible Tools en 3D" />
#+HTML_HEAD:   <meta property="og:type" content="article" />
#+HTML_HEAD:   <meta property="og:article:published_time" content="2023-03-29" />
#+HTML_HEAD:   <meta property="og:article:author" content="Osiris Alejandro Gomez" />
#+HTML_HEAD:   <meta property="og:url" content="https://osiux.com/2023-03-29-dibujar-logo-ansible-tools-en-3d-usando-openscad-y-blender.html" />
#+HTML_HEAD:   <meta property="og:site_name" content="OSiUX" />
#+HTML_HEAD:   <meta property="og:locale" content="es_AR" />
#+HTML_HEAD:   <meta property="og:image" content="https://osiux.com/img/ansible-tools/ansible-tools-openscad.png" />

** =GraphViz=, antes te admiraba!

Mi primer /approuch/ para graficar suele ser =GraphViz= [fn:GraphViz],
pero esta vez se complicó un poco, de por si, siempre se resiste a
seguir órdenes estrictas y solo acepta sugerencias que no siempre las
toma en cuenta...

** 3D es la que vá!

Entonces decidí usar =OpenSCAD= [fn:openscad] el cual ya había utilizado
con anterioridad para graficar el isotipo de =gcoop= [fn:gcoop] y el de
=FACTTIC= [fn:FACTTIC], y teniendo en cuenta la geometría del logo de
=Ansible Tools= [fn:ansible-tools], no debería ser muy complejo...

Inicialmente fue fácil, dibujar la porción que se repite, elementos
básicos, comencé con un \cylinder\ de =radio 1=, y luego fue cuestión de
agregar los otros 3 \cylinders\ moviendo (=translate=) y rotando
(=rotate=) a la posición correcta.

#+BEGIN_EXAMPLE
module circles() {
    $fn=32;
    translate([d1,0,0]) cylinder(r=r3, h);
    translate([d2,0,0]) cylinder(r=r3, h);    
    rotate([0,0,a1]) translate([d1,0,0]) cylinder(r=r3, h);
    rotate([0,0,a1]) translate([d2,0,0]) cylinder(r=r3, h);
}
#+END_EXAMPLE

Ahora bien, para agregar las líneas que unían los círculos, en principio
fueron simples las exteriores, porque su origen y destino eran el centro
de cada circulo dibujados con /cylinders/, pero las diagonales, no tenía
el dato preciso (estoy oxidado con trigonometría), entonces fui probando
ángulos por aproximación, queda pendiente mayor precisión.

#+BEGIN_EXAMPLE
module lines() {
    $fn=32;
    translate([d1,0,r3/2]) rotate([0,90,45]) cylinder(r=r3/2,(d2-d1)*1.2);
    translate([d2,0,r3/2]) rotate([0,90,145]) cylinder(r=r3/2,(d2-d1)*1.2);    
    translate([d1,0,r3/2]) rotate([0,90,0]) cylinder(r=r3/2,d2-d1);
    translate([d1,0,r3/2]) rotate([270,0,5]) cylinder(r=r3/2,l1);
    translate([d2,0,r3/2]) rotate([270,0,6]) cylinder(r=r3/2,l2);        
}
#+END_EXAMPLE

Y con estas 2 funciones (=circles= y =lines=) ya tenía el =modulo= que
se repetía.

#+BEGIN_EXAMPLE
module modulo()
{
    union() {
        lines();
        circles();
    }
}
#+END_EXAMPLE

Capturando la secuencia construí un =gif= del paso a paso del modulo:

[[file:img/ansible-tools/ansible-tools-openscad-modulo.gif][file:tmb/ansible-tools/ansible-tools-openscad-modulo.gif]]

Bastó contar, cuántas veces se repetía, eran =32= veces, dividiendo los
=360= grados, el ángulo de rotación daba =11.25= grados.

#+BEGIN_EXAMPLE
module border() {
    for ( i = [1 : 32] ) {
        rotate([0,0,i*a1]) modulo();
    }
}
#+END_EXAMPLE

[[file:img/ansible-tools/ansible-tools-openscad.gif][file:tmb/ansible-tools/ansible-tools-openscad.gif]]

** /AAAA.../

Ahora solo faltaban el círculo central con la =A= de =Ansible=, y si
bien =OpenSCAD= permite importar un =svg= y extruirlo, no recordaba como
hacerlo y mucho tiempo no tenía, entonces como no podía resolver la
tarea, la delegué en =herzet= [fn:hertzet] que sabe bastante de
=Blender= [fn:blender], solo tuve que exportar el modelo y a otra cosa
mariposa...

En cuestión de minutos =hertzet= ya estaba solucionado mis /bugs/ en
=Blender= y un /screenshot/ bastó para despreocuparme...

[[file:img/ansible-tools/ansible-tools-blender-import.jpg][file:tmb/ansible-tools/ansible-tools-blender-import.jpg]]

Un par de horas mas tarde, obtuve una secuencia de imágenes con la
animación para convertir en video! Comparto un =gif=

[[file:img/ansible-tools/ansible-tools-blender-1920x1080.gif][file:tmb/ansible-tools/ansible-tools-blender.gif]]

** También podes leer

- [[file:2023-03-30-ansible-buenos-aires-meeetup-marzo-2023.org][Ansible Buenos Aires Meetup MAR/2023]]
- [[file:2022-10-03-ansible-tools-v0-3-0.org][/Ansible Tools/ =v0.3.0=]]

[fn:GraphViz]       https://graphviz.org/
[fn:openscad]       https://openscad.org/
[fn:gcoop]          https://www.gcoop.coop/
[fn:FACTTIC]        https://facttic.org.ar/
[fn:ansible-tools]  https://gitlab.com/osiux/ansible_tools/
[fn:hertzet]        https://github.com/hertzet
[fn:blender]        https://www.blender.org/

** ChangeLog

  - [[https://gitlab.com/osiux/osiux.gitlab.io/-/commit/deff9a796987fad3fc5c9fb77d324243936724f9][=2023-05-21 16:28=]] agregar Dibujar logo /Ansible Tools/ en /3D/ usando /OpenSCAD/ y /Blender/
