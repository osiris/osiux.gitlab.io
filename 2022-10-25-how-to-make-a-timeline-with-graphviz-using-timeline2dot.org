#+TITLE:       C√≥mo hacer una l√≠nea de tiempo con GraphViz
#+AUTHOR:      Osiris Alejandro Gomez
#+EMAIL:       osiux@osiux.com
#+LANGUAGE:    es
#+LINK_HOME:   index.html
#+INCLUDE:     header.org
#+DATE:        2022-10-25 21:43
#+HTML_HEAD:   <meta property="og:title" content="C√≥mo hacer una l√≠nea de tiempo con GraphViz" />
#+HTML_HEAD:   <meta property="og:type" content="article" />
#+HTML_HEAD:   <meta property="og:article:published_time" content="2022-10-25" />
#+HTML_HEAD:   <meta property="og:article:author" content="Osiris Alejandro Gomez" />
#+HTML_HEAD:   <meta property="og:url" content="https://osiux.com/2022-10-25-how-to-make-a-timeline-with-graphviz-using-timeline2dot.html" />
#+HTML_HEAD:   <meta property="og:site_name" content="OSiUX" />
#+HTML_HEAD:   <meta property="og:locale" content="es_AR" />
#+HTML_HEAD:   <meta property="og:image" content="https://osiux.com/og/filiales-gnu-linux/tlns-filiales-dev-0299.png" />


[[file:img/filiales-gnu-linux/tlns-filiales-dev-0299.png][file:tmb/filiales-gnu-linux/tlns-filiales-dev-0299.png]]

** si no existe lo que necesitas, entonces oc√∫pate de generarlo!

Hace un par de d√≠as, d√≠ mi primer charla en /Nerdearla/ [fn:nerdearla],
=C√≥mo migrar 6300 equipos a GNU/Linux usando Ansible y AWX?= [fn:fgnul]
y quer√≠a que tuviera /l√≠neas de tiempo/ animadas, y luego de buscar por
la /web/ alg√∫n /software/ que las hiciera usando c√≥digo, no encontr√©
nada de mi agrado, asi que llegu√© a la conclusi√≥n de que ten√≠a que
ocuparme de crear un /script/ que usara =/GraphViz/= [fn:graphviz] y que
luego lo llamar√≠a =timeline2dot= [fn:timeline2dot] üòé

** y el requerimiento?

El auto-requerimiento era generar una l√≠nea de tiempo simple, con fechas
y etiquetas que muestre un rango de fechas y luego se vaya moviendo de
derecha a izquierda mostrando m√°s d√≠as con m√°s etiquetas de eventos
importantes.

** /Draft/

Comenc√© a idear c√≥mo mostrar una l√≠nea, segmentada en d√≠as y luego
etiquetas que destaquen lo que sucedi√≥ en una fecha en particular.

/GraphViz/ es fabuloso, b√°sicamente cuenta con 2 elementos: =node= y
=edge=, y es bastante dif√≠cil lograr posicionar los elementos donde te
imaginas que deber√≠an estar, esto es as√≠ porque debe resolver la
posici√≥n de miles de objetos y entonces la potestad de d√≥nde ubicarlos
la tiene /GraphViz/.

S√≥lo pod√©s indicarle preferencias de d√≥nde deber√≠an estar los elementos,
un posible orden y el mismo se ve afectado por el mismo orden en que
escrib√≠s el c√≥digo en lenguaje =/DOT/= [fn:dot], pero como llevo un par
de a√±os jugando con esto, algunas ma√±as ya se las conozco y siempre
termino aprendiendo algo nuevo.

En este caso, se me ocurri√≥ usar como =label= de los nodos un /pipe/ =|=
para usar como indicador de d√≠a y el car√°cter /UTF-8/ para /rect√°ngulo
vertical negro/ =‚ñà= (/BLACK VERTICAL RECTANGLE/ como se√±alador de d√≠a
importante, desde donde saldr√≠a la etiqueta a destacar.

De esta manera, desde el /nodo/ del d√≠a destacado con =‚ñà= deb√≠a realizar
una relaci√≥n con el /nodo/ de la etiqueta, por ejemplo
=pass-utils/v0.0.2= que estar√≠a dentro un rect√°ngulo usando ="rect"=
como tipo de /shape/.

Para balancear un poco y que no se superpongan 2 etiquetas de d√≠as
contiguos, lo mejor fue, dibujar los /d√≠as pares por encima/ de /la
l√≠nea de tiempo/ y los /d√≠as impares por debajo/ de la misma.

Y como texto de la relaci√≥n pondr√≠a la fecha de la etiqueta inicialmente
en formato /ISO8601/ [fn:iso8601] (luego lo cambi√© a =MMM/DD=) y de esta
manera obtengo una /l√≠nea de tiempo/ completa y simple a la vez!

** =.tln=

Teniendo un /template/ de c√≥mo se ver√≠a todo, ahora era hora de generar
el /script/ =timeline2dot= que se ocupar√≠a de leer desde un archivo de
texto =.tln= los siguientes campos: =YYYY-MM-DD group tag vM.N.P= por
ejemplo:

#+BEGIN_EXAMPLE
2018-09-20 dev ansible v2.7.0rc3 New release v2.7.0rc3
2018-09-21 dev r_sudoers v2.0.20 Version 2.0.20
2018-09-25 dev drbl v2.28.4 Released as v2.28.4.
2018-09-26 dev drbl v2.28.5 Released as v2.28.5.
2018-09-27 dev ansible v2.5.10 New release v2.5.10
2018-09-28 dev ansible v2.6.5 New release v2.6.5
2018-09-29 dev drbl v2.28.6 Released as v2.28.6.
#+END_EXAMPLE

** los /tags/ se convierten en una /timeline/

La idea era generar un archivo =timeline.tln= por cada repositorio,
partiendo de la informaci√≥n de los /tags/ de =git= ya que cuentan con
una fecha de generaci√≥n y una versi√≥n en formato =semver= [fn:semver]
(/Semantic Version/), adem√°s de una anotaci√≥n extra que podr√≠a mostrar.

Asi que ahora en cualquier repositorio git, simplemente ejecuto
=git-tag-timeline= [fn:git-tag-timeline] y obtengo una /l√≠nea de tiempo/
en forma de archivo =timeline.tln=

** agrupando fechas!

A los efectos de agrupar de alguna manera las diferentes etiquetas de
los proyectos, resolv√≠ utilizar un /script/ =date2stage= [fn:date2stage]
que se ocupar√≠a de recibir una fecha y devolver el =stage= o =grupo= al
cu√°l deber√≠a pertenecer, es decir si ingreso =2020-03-15= obtengo =dep=,
porque desde el /2019-09-02 al 2020-08-31/ estuvimos en la etapa de
=deploy= del proyecto =Filiales GNU/Linux=

** completando d√≠as faltantes!

Para tener un mejor control de los d√≠as a visualizar, el /script/
=timeline-days= se ocupa de completar los d√≠as faltantes entre el
primero y el √∫ltimo definidos en =timeline.tln=

** agregando un poco de estilo!

Si en el directorio actual existe un archivo =timeline.style=, se pueden
re-definir los colores de cada componente, utilizando como prefijo de
las variables, los nombres de los nodos, por ejemplo
=ANSIBLE_EDGE_COLOR=, algunos ejemplos usados:

#+BEGIN_SRC sh :session :results none :exports code

ALL_EDGE_COLOR='#16a085'
ALL_EDGE_FONTCOLOR='#16a085'
ALL_NODE_COLOR='#16a085'
ALL_TAG_EDGE_COLOR='#16a085'
ALL_TAG_SHAPE_FILL_COLOR='#16a085'
ANSIBLE_EDGE_COLOR='#1abc9c'
ANSIBLE_EDGE_FONTCOLOR='#1abc9c'
ANSIBLE_NODE_COLOR='#1abc9c'
ANSIBLE_TAG_EDGE_COLOR='#1abc9c'
ANSIBLE_TAG_SHAPE_FILL_COLOR='#1abc9c'
APT_EDGE_COLOR='#27ae60'
APT_EDGE_FONTCOLOR='#27ae60'
APT_NODE_COLOR='#27ae60'
APT_TAG_EDGE_COLOR='#27ae60'
APT_TAG_SHAPE_FILL_COLOR='#27ae60'
AWX_EDGE_COLOR='#2980b9'
AWX_EDGE_FONTCOLOR='#2980b9'
AWX_NODE_COLOR='#2980b9'
AWX_TAG_EDGE_COLOR='#2980b9'
AWX_TAG_SHAPE_FILL_COLOR='#2980b9'

#+END_SRC

** series animadas

=timeline-series= se ocupa de generar los archivos =.dot= y =.png= con 1
d√≠a corrido en un per√≠odo de 15 d√≠as para luego convertirlos a un video
en formato =.mp4= usando =ffmpeg=.

Se genera una imagen por cada d√≠a, por ejemplo para el /stage/ =dev=,
una muestra de algunas im√°genes generadas antes de convertirse en video!

[[file:img/filiales-gnu-linux/tlns-filiales-dev-0290.png][file:tmb/filiales-gnu-linux/tlns-filiales-dev-0290.png]]

[[file:img/filiales-gnu-linux/tlns-filiales-dev-0291.png][file:tmb/filiales-gnu-linux/tlns-filiales-dev-0291.png]]

[[file:img/filiales-gnu-linux/tlns-filiales-dev-0292.png][file:tmb/filiales-gnu-linux/tlns-filiales-dev-0292.png]]

[[file:img/filiales-gnu-linux/tlns-filiales-dev-0293.png][file:tmb/filiales-gnu-linux/tlns-filiales-dev-0293.png]]

[[file:img/filiales-gnu-linux/tlns-filiales-dev-0294.png][file:tmb/filiales-gnu-linux/tlns-filiales-dev-0294.png]]

[[file:img/filiales-gnu-linux/tlns-filiales-dev-0295.png][file:tmb/filiales-gnu-linux/tlns-filiales-dev-0295.png]]

** [[file:img/filiales-gnu-linux/filiales-dev.mp4][video generado!]]

#+BEGIN_EXPORT html
<video id="video" controls autoplay loop background="#000000">
  <source src="img/filiales-gnu-linux/filiales-dev.mp4" type="video/mp4">
</video>
#+END_EXPORT

** tal vez te interese leer

- [[file:imagenes-magicas-imagemagick.org][im√°genes m√°gicas | imagemagick]]
- [[file:visualizando-grafos-graphviz.org][Visualizando Grafos usando Graphviz]]
- [[file:2012-03-05-redes-abiertas-versus-redes-cerradas.org][redes abiertas versus redes cerradas]]
- [[file:2021-03-04-diagrama-de-secuencia-trafico-de-red][Diagrama de secuencia de Tr√°fico de Red]]
- [[file:2022-10-20-howto-migrate-6300-hosts-to-gnu-linux-using-ansible-and-awx.org][C√≥mo migrar 6300 equipos a GNU/Linux usando Ansible y AWX]]
- [[file:2022-10-21-use-graphviz-for-slides.org][Usar Graphviz para generar Slides]]

[fn:nerdearla]         https://nerdear.la/
[fn:fgnul]             https://osiux.com/2022-10-20-howto-migrate-6300-hosts-to-gnu-linux-using-ansible-and-awx.html
[fn:graphviz]          https://graphviz.org/
[fn:timeline2dot]      https://gitlab.com/osiux/timeline2dot.git
[fn:dot]               http://www.graphviz.org/doc/info/lang.html
[fn:iso8601]           https://es.wikipedia.org/wiki/ISO_8601
[fn:semver]            https://semver.org/lang/es/
[fn:git-tag-timeline]  https://gitlab.com/osiux/timeline2dot/-/raw/develop/git-tag-timeline
[fn:date2stage]        https://gitlab.com/osiux/timeline2dot/-/raw/develop/date2stage




** ChangeLog

  - [[https://gitlab.com/osiux/osiux.gitlab.io/-/commit/ef590e14a78a8a1106c27f4727997e4bd5b908da][=2022-11-15 09:42=]] reemplazar imagen de OpenGraph en =C√≥mo hacer una l√≠nea de tiempo con GraphViz=
  - [[https://gitlab.com/osiux/osiux.gitlab.io/-/commit/bf3a61526ad2a73cecb77a18995f1d63494e3664][=2022-11-13 20:39=]] agregar y actualizar tags OpenGraph
  - [[https://gitlab.com/osiux/osiux.gitlab.io/-/commit/6652f0fa1d2543e388ad46318a80ef7caec409c6][=2022-10-30 09:07=]] agregar controles de video a =C√≥mo hacer una l√≠nea de tiempo con GraphViz=
  - [[https://gitlab.com/osiux/osiux.gitlab.io/-/commit/9166b1634c42e39be8942c4ba99d3d3d3ab041af][=2022-10-26 17:07=]] agregar =C√≥mo hacer una l√≠nea de tiempo con GraphViz=
